type KVData @jsonField {
  key: String
  value: String
  type: String
}

type Block @entity {
  id: ID!

  number: BigInt
  timestamp: Date
  parentHash: String
  specVersion: String
  stateRoot: String
  extrinsicRoot: String

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!
  method: String
  section: String
  args: [KVData]
  signer: Account
  nonce: BigInt
  timestamp: Date
  signature: String
  tip: String
  isSigned: Boolean
  isSuccess: Boolean
  raw: String

  block: Block
  events: [Event] @derivedFrom(field: "extrinsic")
  calls: [Call] @derivedFrom(field: "extrinsic")
}

type Call @entity {
  id: ID!

  section: String
  method: String
  args:[KVData]
  timestamp: Date
  isSuccess: Boolean

  signer: Account
  extrinsic: Extrinsic
  parentCall: Call

  calls: [Call] @derivedFrom(field: "parentCall")
}

type Event @entity {
  id: ID!

  index: Int
  section: String
  method: String
  data: [KVData]

  timestamp: Date
  blockNumber: BigInt
  block: Block
  extrinsic: Extrinsic
}


type Account @entity {
  id: ID!
  address: String
  name: String
  txCount: BigInt

  tokens: [AccountBalance] @derivedFrom(field: "account") # group all tokens belong to the account

  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
  calls: [Call] @derivedFrom(field: "signer")
  transferIn: [Transfer] @derivedFrom(field: "to")
  transferOut: [Transfer] @derivedFrom(field: "from")
}


type AccountBalance @entity {
    id: ID! #`account`-`token`
    account: Account
    token: Token

    total: BigInt # total balance
    free: BigInt # free balance
    reserved: BigInt #revert balance
    frozen: BigInt # locked balance

    updateAtBlock: BigInt # update block number
}

type Transfer @entity {
  id: ID!

  from: Account
  to: Account
  token: Token
  amount: String
  amountInUSD: String
  timestamp: Date
  isSuccess: Boolean
  extrinsic: Extrinsic
}

type Token @entity {
  id: ID!

  # the token name
  name: String
  # the token decimal
  decimal: Int

  # the price form dex
  price: String

  # total issuance
  issuance: String

  # locked amount in loan
  lockedInLoan: String
  # locked amount in dex
  lockedInDex: String
  # locked amount in incentive
  lockedInIncentive: String

  volume: String
  volumeUSD: String
  txCount: BigInt
}